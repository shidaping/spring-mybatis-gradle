<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	 http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
	  http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
	<!-- 自动扫描的包名 -->
	<context:component-scan
		base-package="com.sdp.controller. ,com.sdp.jsoncontroller. ,com.sdp.mybatis.dao"></context:component-scan>
	<!-- 默认的注解映射的支持 -->
	<mvc:annotation-driven />
	<context:property-placeholder
		location="classpath:config-#{systemProperties['ENV'] ?:'development'}.properties" />
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<!-- <property name="password" value="${db.password}" /> -->
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	<bean id="postDaoImpl" class="com.sdp.mybatis.dao.PostDaoImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<!-- 视图解释类 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/jsp/"/> <property name="suffix" value=".jsp"/> 
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" 
		/> </bean> -->

	<!-- 拦截器 <mvc:interceptors> <bean class="com.sdp.inteceptor.MyInteceptor" 
		/> </mvc:interceptors> -->
	<!-- 对静态资源文件的访问 方案一 （二选一） <mvc:default-servlet-handler/> -->

	<!-- 对静态资源文件的访问 方案二 （二选一） -->
	<mvc:resources mapping="/img/**" location="/img/"
		cache-period="0" />
	<mvc:resources mapping="/js/**" location="/js/"
		cache-period="0" />
	<mvc:resources mapping="/css/**" location="/css/"
		cache-period="0" />
	<mvc:resources mapping="/ckeditor/**" location="/ckeditor/"
		cache-period="0" />
	<mvc:resources mapping="/websockettest/**" location="/websockettest/"
		cache-period="0" />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="cache" value="true"></property>
		<property name="suffix" value=".html" />
		<property name="contentType" value="text/html; charset=UTF-8" />
	</bean>
	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/views/" />
		<!-- <property name="configLocation" value="classpath:velocity.properties"/> -->
		<property name="velocityProperties">
			<props>
				<prop key="output.encoding">UTF-8</prop>
				<prop key="input.encoding">UTF-8</prop>
			</props>
		</property>
	</bean>
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="objectMapper">
						<bean class="com.fasterxml.jackson.databind.ObjectMapper">
							<property name="dateFormat">
								<bean class="java.text.SimpleDateFormat">
									<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"></constructor-arg>
								</bean>
							</property>
						</bean>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<!-- 文件上传配置 -->
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
		<property name="maxUploadSize" value="100000"/> </bean> -->
	<!-- import -->
	<!-- <import resource="spring-security.xml" /> <import resource="spring-interceptor.xml"/> -->
	<!-- <bean id="customizedConfig" class="com.sdp.config.Config"> <property 
		name="onlineMemberId" value="${onlineMemberId}"/> <property name="passwordSalt" 
		value="#{systemProperties['LSF_PASSWORD_SALT'] ?:'dangerous'}"/> </bean> -->
</beans> 
