apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'war' 
apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'

import org.gradle.plugins.ide.eclipse.model.Facet
apply plugin: 'eclipse-wtp'
  
sourceCompatibility = 1.8 
// webAppDirName = 'src/webapp'
// sourceSets.main.java.srcDir 'src/main/java' 
repositories {  
    mavenCentral()
    // jcenter()
}  
  
dependencies {  
  compile group: 'org.springframework', name: 'spring-core', version: '4.1.6.RELEASE'
  compile group: 'org.springframework', name: 'spring-webmvc', version: '4.1.6.RELEASE'
  compile group: 'org.springframework', name: 'spring-context-support', version: '4.1.6.RELEASE'
  compile group: 'org.springframework', name: 'spring-tx', version: '4.1.6.RELEASE'
  compile group: 'org.springframework', name: 'spring-jdbc', version: '4.1.6.RELEASE'
  compile group: 'org.springframework', name: 'spring-aop', version: '4.1.6.RELEASE'
  compile group: 'org.springframework', name: 'spring-test', version: '4.1.6.RELEASE'
  compile 'junit:junit:4.12'
  compile 'redis.clients:jedis:2.9.0'
  compile group: 'aspectj', name: 'aspectjrt', version: '1.5.4'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.3'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.3'
  compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.1.1'
  compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.38'
  compile group: 'org.mybatis', name: 'mybatis', version: '3.2.8'
  compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.0'
  compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.1.2.Final'
  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21' 
  compile group: 'org.apache.velocity', name: 'velocity', version: '1.7'
  compile 'javax.servlet:javax.servlet-api:3.1.0'
  compile 'org.eclipse.jetty:jetty-distribution:8.1.19.v20160209'
  // compile 'org.eclipse.jetty:jetty-distribution:9.4.5.v20170502'
  // compile group: 'org.eclipse.jetty.cdi', name: 'cdi-servlet', version: '9.4.5.v20170502'
  // compile group: 'org.eclipse.jetty.cdi', name: 'cdi-websocket', version: '9.4.5.v20170502'

  // compile 'org.eclipse.jetty:jetty-distribution:9.2.24.v20180105'

  // compile 'org.eclipse.jetty:jetty-distribution:9.4.8.v20171121'
  // compile 'org.eclipse.jetty:test-jetty-webapp:9.4.8.v20171121'

  // compile 'org.eclipse.jetty:test-proxy-webapp:9.4.8.v20171121'
  // providedCompile group: 'org.apache.tomcat', name: 'tomcat-catalina', version: '8.0.35'
  compile group: 'ch.qos.logback', name: 'logback-core', version: '1.1.7'
  compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
  compile group: 'org.logback-extensions', name: 'logback-ext-spring', version: '0.1.4'
  
}
eclipse {
    wtp {
        facet {
            facet name: 'jst.web', type: Facet.FacetType.fixed
            facet name: 'wst.jsdt.web', type: Facet.FacetType.fixed
            facet name: 'jst.java', type: Facet.FacetType.fixed
            facet name: 'jst.web', version: '3.0'
            facet name: 'jst.java', version: '1.8'
            facet name: 'wst.jsdt.web', version: '1.0'
        }
    }
}
gretty {  
    httpPort = 8080  
    // contextPath ="/${project.name}"
    contextPath ="/"    
    servletContainer = 'jetty9'  
} 
task download(type: Copy) {  
    from configurations.runtime  
    into 'lib' 
}

jar {
    // from {
    //     configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    // }
    // from "$buildDir"
    manifest {
        attributes 'Main-Class': 'com.sdp.App'
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

configurations {
  executableWarDeps
}



war {

  from "$buildDir/classes/java/main"
  manifest { 
    attributes (
      'Main-Class': 'com.sdp.App',
      'Class-Path': 'WEB-INF/classes'
    ) 

  }
  // from {
  //   configurations.executableWarDeps.collect {
  //     it.isDirectory() ? it : project.zipTree(it)
  //   }
  // }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}